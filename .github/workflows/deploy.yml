# name: Deployment

# on:
#   push:
#     branches:
#       - 'main'

# jobs:
#   lint:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - name: Set up Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: '20'

#       - name: Install pnpm
#         run: npm install -g pnpm

#       - name: Install dependencies
#         run: pnpm install

#       - name: Run ESLint
#         run: pnpm lint

#       - name: Run Typescript Checks
#         run: pnpm typecheck

#   docker-deploy:
#     runs-on: ubuntu-latest
#     needs: lint

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - name: Create .env file
#         run: |
#           echo NEXT_PUBLIC_SANITY_PROJECT_ID=${{ secrets.NEXT_PUBLIC_SANITY_PROJECT_ID }} >> .env
#           echo NEXT_PUBLIC_SANITY_DATASET=${{ secrets.NEXT_PUBLIC_SANITY_DATASET }} >> .env
#           echo NEXT_PUBLIC_SANITY_TOKEN=${{ secrets.NEXT_PUBLIC_SANITY_TOKEN }} >> .env
#           echo WOOCOMMERCE_CLIENT_ID=${{ secrets.WOOCOMMERCE_CLIENT_ID }} >> .env
#           echo WOOCOMMERCE_CLIENT_SECRET=${{ secrets.WOOCOMMERCE_CLIENT_SECRET }} >> .env
#           echo REDSYS_MERCHANT_CODE=${{ secrets.REDSYS_MERCHANT_CODE }} >> .env
#           echo REDSYS_TERMINAL=${{ secrets.REDSYS_TERMINAL }} >> .env
#           echo REDSYS_SECRET_KEY=${{ secrets.REDSYS_SECRET_KEY }} >> .env
#           echo PAYPAL_CLIENT_ID=${{ secrets.PAYPAL_CLIENT_ID }} >> .env
#           echo PAYPAL_CLIENT_SECRET=${{ secrets.PAYPAL_CLIENT_SECRET }} >> .env
#           echo RESEND_API_KEY=${{ secrets.RESEND_API_KEY }} >> .env
#           echo NEXT_PUBLIC_AXIOM_DATASET=${{ secrets.NEXT_PUBLIC_AXIOM_DATASET }} >> .env
#           echo NEXT_PUBLIC_AXIOM_TOKEN=${{ secrets.NEXT_PUBLIC_AXIOM_TOKEN }} >> .env
#           echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
#           echo AUTH_SECRET=${{ secrets.AUTH_SECRET }} >> .env
#           echo AUTH_TRUST_HOST=${{ secrets.AUTH_TRUST_HOST }} >> .env
#           echo AUTH_GOOGLE_ID=${{ secrets.AUTH_GOOGLE_ID }} >> .env
#           echo AUTH_GOOGLE_SECRET=${{ secrets.AUTH_GOOGLE_SECRET }} >> .env
#           echo YOTPO_APP_KEY=${{ secrets.YOTPO_APP_KEY }} >> .env
#           echo NEXT_PUBLIC_URL=${{ secrets.NEXT_PUBLIC_URL }} >> .env

#       # - name: Set up QEMU for cross-platform builds
#       #   uses: docker/setup-qemu-action@v3

#       # - name: Set up Docker Build
#       #   uses: docker/setup-buildx-action@v3

#       # - name: Log in to GitHub Container Registry
#       #   run: echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin

#       # - name: Build multi-platform Docker image
#       #   run: docker build . --platform linux/amd64 -t ghcr.io/n4n1t0/lavanda-del-lago:latest

#       # - name: Push Docker image to GitHub Packages
#       #   run: docker push ghcr.io/n4n1t0/lavanda-del-lago:latest

#       # - name: Connect with VPS
#       #   uses: appleboy/ssh-action@master
#       #   with:
#       #     host: ${{ secrets.HOST }}
#       #     username: ${{ secrets.USERNAME }}
#       #     key: ${{ secrets.SSH_PRIVATE_KEY }}
#       #     passphrase: ${{ secrets.SSH_PASSPHRASE }}
#       #     port: ${{ secrets.SSH_PORT }}
#       #     script: |
#       #       docker stop lavanda-del-lago || true
#       #       docker rm lavanda-del-lago || true
#       #       docker pull ghcr.io/n4n1t0/lavanda-del-lago:latest
#       #       docker run -d --name lavanda-del-lago -p 3000:3000 ghcr.io/n4n1t0/lavanda-del-lago:latest
