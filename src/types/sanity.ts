/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type SanityImagePaletteSwatch = {
  _type: 'sanity.imagePaletteSwatch'
  background?: string
  foreground?: string
  population?: number
  title?: string
}

export type SanityImagePalette = {
  _type: 'sanity.imagePalette'
  darkMuted?: SanityImagePaletteSwatch
  lightVibrant?: SanityImagePaletteSwatch
  darkVibrant?: SanityImagePaletteSwatch
  vibrant?: SanityImagePaletteSwatch
  dominant?: SanityImagePaletteSwatch
  lightMuted?: SanityImagePaletteSwatch
  muted?: SanityImagePaletteSwatch
}

export type SanityImageDimensions = {
  _type: 'sanity.imageDimensions'
  height?: number
  width?: number
  aspectRatio?: number
}

export type Geopoint = {
  _type: 'geopoint'
  lat?: number
  lng?: number
  alt?: number
}

export type Review = {
  _id: string
  _type: 'review'
  _createdAt: string
  _updatedAt: string
  _rev: string
  id?: number
  title?: string
  content?: string
  score?: number
  created_at?: string
  updated_at?: string
  name?: string
  email?: string
}

export type ProductTag = {
  _id: string
  _type: 'productTag'
  _createdAt: string
  _updatedAt: string
  _rev: string
  description?: Array<{
    children?: Array<{
      marks?: Array<string>
      text?: string
      _type: 'span'
      _key: string
    }>
    style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote'
    listItem?: 'bullet' | 'number'
    markDefs?: Array<{
      href?: string
      _type: 'link'
      _key: string
    }>
    level?: number
    _type: 'block'
    _key: string
  }>
  name?: string
  slug?: Slug
  taxonomy?: string
}

export type ProductCategory = {
  _id: string
  _type: 'productCategory'
  _createdAt: string
  _updatedAt: string
  _rev: string
  description?: Array<{
    children?: Array<{
      marks?: Array<string>
      text?: string
      _type: 'span'
      _key: string
    }>
    style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote'
    listItem?: 'bullet' | 'number'
    markDefs?: Array<{
      href?: string
      _type: 'link'
      _key: string
    }>
    level?: number
    _type: 'block'
    _key: string
  }>
  name?: string
  slug?: Slug
  link?: Slug
  taxonomy?: string
  main?: boolean
  parent?: {
    _ref: string
    _type: 'reference'
    _weak?: boolean
    [internalGroqTypeReferenceTo]?: 'productCategory'
  }
}

export type Product = {
  _id: string
  _type: 'product'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: string
  slug?: Slug
  link?: Slug
  price?: number
  sale?: {
    price?: number
    from?: string
    to?: string
  }
  downloads?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.fileAsset'
    }
    _type: 'file'
  }
  dimensions?: {
    length?: number
    width?: number
    height?: number
    weight?: number
    alt?: Array<
      | {
          children?: Array<{
            marks?: Array<string>
            text?: string
            _type: 'span'
            _key: string
          }>
          style?:
            | 'normal'
            | 'h1'
            | 'h2'
            | 'h3'
            | 'h4'
            | 'h5'
            | 'h6'
            | 'blockquote'
          listItem?: 'bullet' | 'number'
          markDefs?: Array<{
            href?: string
            _type: 'link'
            _key: string
          }>
          level?: number
          _type: 'block'
          _key: string
        }
      | {
          asset?: {
            _ref: string
            _type: 'reference'
            _weak?: boolean
            [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
          }
          hotspot?: SanityImageHotspot
          crop?: SanityImageCrop
          _type: 'image'
          _key: string
        }
      | ({
          _key: string
        } & ExternalImage)
    >
  }
  options?: {
    name?: string
    values?: Array<string>
  }
  date?: string
  modified?: string
  status?: 'publish' | 'draft' | 'pending' | 'private'
  content?: Array<
    | {
        children?: Array<{
          marks?: Array<string>
          text?: string
          _type: 'span'
          _key: string
        }>
        style?:
          | 'normal'
          | 'h1'
          | 'h2'
          | 'h3'
          | 'h4'
          | 'h5'
          | 'h6'
          | 'blockquote'
        listItem?: 'bullet' | 'number'
        markDefs?: Array<{
          href?: string
          _type: 'link'
          _key: string
        }>
        level?: number
        _type: 'block'
        _key: string
      }
    | {
        asset?: {
          _ref: string
          _type: 'reference'
          _weak?: boolean
          [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
        }
        hotspot?: SanityImageHotspot
        crop?: SanityImageCrop
        _type: 'image'
        _key: string
      }
    | ({
        _key: string
      } & ExternalImage)
  >
  excerpt?: string
  featuredMedia?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    _type: 'image'
  }
  relatedImages?: Array<{
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    _type: 'image'
    _key: string
  }>
  commentStatus?: 'open' | 'closed'
  productCategories?: Array<{
    _ref: string
    _type: 'reference'
    _weak?: boolean
    _key: string
    [internalGroqTypeReferenceTo]?: 'productCategory'
  }>
  productTag?: Array<{
    _ref: string
    _type: 'reference'
    _weak?: boolean
    _key: string
    [internalGroqTypeReferenceTo]?: 'productTag'
  }>
  reviews?: Array<{
    _ref: string
    _type: 'reference'
    _weak?: boolean
    _key: string
    [internalGroqTypeReferenceTo]?: 'review'
  }>
  variations?: Array<{
    _ref: string
    _type: 'reference'
    _weak?: boolean
    _key: string
    [internalGroqTypeReferenceTo]?: 'product'
  }>
  relatedProducts?: Array<{
    _ref: string
    _type: 'reference'
    _weak?: boolean
    _key: string
    [internalGroqTypeReferenceTo]?: 'product'
  }>
}

export type SanityFileAsset = {
  _id: string
  _type: 'sanity.fileAsset'
  _createdAt: string
  _updatedAt: string
  _rev: string
  originalFilename?: string
  label?: string
  title?: string
  description?: string
  altText?: string
  sha1hash?: string
  extension?: string
  mimeType?: string
  size?: number
  assetId?: string
  uploadId?: string
  path?: string
  url?: string
  source?: SanityAssetSourceData
}

export type Tag = {
  _id: string
  _type: 'tag'
  _createdAt: string
  _updatedAt: string
  _rev: string
  name?: string
  slug?: Slug
}

export type Post = {
  _id: string
  _type: 'post'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: string
  slug?: Slug
  date?: string
  modified?: string
  status?:
    | 'publish'
    | 'future'
    | 'draft'
    | 'pending'
    | 'private'
    | 'trash'
    | 'auto-draft'
    | 'inherit'
  content?: Array<
    | {
        children?: Array<{
          marks?: Array<string>
          text?: string
          _type: 'span'
          _key: string
        }>
        style?:
          | 'normal'
          | 'h1'
          | 'h2'
          | 'h3'
          | 'h4'
          | 'h5'
          | 'h6'
          | 'blockquote'
        listItem?: 'bullet' | 'number'
        markDefs?: Array<{
          href?: string
          _type: 'link'
          _key: string
        }>
        level?: number
        _type: 'block'
        _key: string
      }
    | {
        asset?: {
          _ref: string
          _type: 'reference'
          _weak?: boolean
          [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
        }
        hotspot?: SanityImageHotspot
        crop?: SanityImageCrop
        _type: 'image'
        _key: string
      }
    | ({
        _key: string
      } & ExternalImage)
  >
  excerpt?: string
  featuredMedia?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    _type: 'image'
  }
  sticky?: boolean
  author?: {
    _ref: string
    _type: 'reference'
    _weak?: boolean
    [internalGroqTypeReferenceTo]?: 'author'
  }
  categories?: Array<{
    _ref: string
    _type: 'reference'
    _weak?: boolean
    _key: string
    [internalGroqTypeReferenceTo]?: 'category'
  }>
  tags?: Array<{
    _ref: string
    _type: 'reference'
    _weak?: boolean
    _key: string
    [internalGroqTypeReferenceTo]?: 'tag'
  }>
}

export type ExternalImage = {
  _type: 'externalImage'
  url?: string
}

export type Category = {
  _id: string
  _type: 'category'
  _createdAt: string
  _updatedAt: string
  _rev: string
  name?: string
  slug?: Slug
}

export type Page = {
  _id: string
  _type: 'page'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: string
  slug?: Slug
  date?: string
  modified?: string
  status?:
    | 'publish'
    | 'future'
    | 'draft'
    | 'pending'
    | 'private'
    | 'trash'
    | 'auto-draft'
    | 'inherit'
  content?: Array<
    | {
        children?: Array<{
          marks?: Array<string>
          text?: string
          _type: 'span'
          _key: string
        }>
        style?:
          | 'normal'
          | 'h1'
          | 'h2'
          | 'h3'
          | 'h4'
          | 'h5'
          | 'h6'
          | 'blockquote'
        listItem?: 'bullet' | 'number'
        markDefs?: Array<{
          href?: string
          _type: 'link'
          _key: string
        }>
        level?: number
        _type: 'block'
        _key: string
      }
    | {
        asset?: {
          _ref: string
          _type: 'reference'
          _weak?: boolean
          [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
        }
        hotspot?: SanityImageHotspot
        crop?: SanityImageCrop
        _type: 'image'
        _key: string
      }
    | ({
        _key: string
      } & ExternalImage)
  >
  excerpt?: string
  featuredMedia?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    _type: 'image'
  }
  author?: {
    _ref: string
    _type: 'reference'
    _weak?: boolean
    [internalGroqTypeReferenceTo]?: 'author'
  }
}

export type Author = {
  _id: string
  _type: 'author'
  _createdAt: string
  _updatedAt: string
  _rev: string
  name?: string
  description?: string
  avatar?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    _type: 'image'
  }
}

export type SanityImageCrop = {
  _type: 'sanity.imageCrop'
  top?: number
  bottom?: number
  left?: number
  right?: number
}

export type SanityImageHotspot = {
  _type: 'sanity.imageHotspot'
  x?: number
  y?: number
  height?: number
  width?: number
}

export type SanityImageAsset = {
  _id: string
  _type: 'sanity.imageAsset'
  _createdAt: string
  _updatedAt: string
  _rev: string
  originalFilename?: string
  label?: string
  title?: string
  description?: string
  altText?: string
  sha1hash?: string
  extension?: string
  mimeType?: string
  size?: number
  assetId?: string
  uploadId?: string
  path?: string
  url?: string
  metadata?: SanityImageMetadata
  source?: SanityAssetSourceData
}

export type SanityAssetSourceData = {
  _type: 'sanity.assetSourceData'
  name?: string
  id?: string
  url?: string
}

export type SanityImageMetadata = {
  _type: 'sanity.imageMetadata'
  location?: Geopoint
  dimensions?: SanityImageDimensions
  palette?: SanityImagePalette
  lqip?: string
  blurHash?: string
  hasAlpha?: boolean
  isOpaque?: boolean
}

export type Slug = {
  _type: 'slug'
  current?: string
  source?: string
}

export type AllSanitySchemaTypes =
  | SanityImagePaletteSwatch
  | SanityImagePalette
  | SanityImageDimensions
  | Geopoint
  | Review
  | ProductTag
  | ProductCategory
  | Product
  | SanityFileAsset
  | Tag
  | Post
  | ExternalImage
  | Category
  | Page
  | Author
  | SanityImageCrop
  | SanityImageHotspot
  | SanityImageAsset
  | SanityAssetSourceData
  | SanityImageMetadata
  | Slug
export declare const internalGroqTypeReferenceTo: unique symbol
// Source: ./src/sanity/lib/queries.ts
// Variable: GET_MENU_CATEGORIES
// Query: *[_type=='productCategory' && main == true] | order(name asc){  "id": _id,  name,   description,   link,   "children": *[_type=='productCategory' && references(^._id)]   {      "id": _id,    name,     link   },  "featuredImage": *[_type=='product' && references(^._id)][0]{    "url":featuredMedia.asset->url,      "blur":featuredMedia.asset->metadata.lqip  }  }
export type GET_MENU_CATEGORIESResult = Array<{
  id: string
  name: string | null
  description: Array<{
    children?: Array<{
      marks?: Array<string>
      text?: string
      _type: 'span'
      _key: string
    }>
    style?: 'blockquote' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'normal'
    listItem?: 'bullet' | 'number'
    markDefs?: Array<{
      href?: string
      _type: 'link'
      _key: string
    }>
    level?: number
    _type: 'block'
    _key: string
  }> | null
  link: Slug | null
  children: Array<{
    id: string
    name: string | null
    link: Slug | null
  }>
  featuredImage: {
    url: string | null
    blur: string | null
  } | null
}>
// Variable: GET_CARD_BLOG_POST
// Query: *[_type =='post' && status == 'publish' && count((categories[]->name)[@ in $type]) > 0][0...12] | order(date desc) {    "id": _id,  "featuredMedia": {    "url": featuredMedia.asset -> url,    "blur": featuredMedia.asset -> metadata.lqip  },  excerpt,  author->{    name,    "avatar": {      "url": avatar.asset -> url,    "blur": avatar.asset -> metadata.lqip    }  },  "slug": slug.current,  categories[]->{    name,    "id": _id,  },    title,    date  }
export type GET_CARD_BLOG_POSTResult = Array<{
  id: string
  featuredMedia: {
    url: string | null
    blur: string | null
  }
  excerpt: string | null
  author: {
    name: string | null
    avatar: {
      url: string | null
      blur: string | null
    }
  } | null
  slug: string | null
  categories: Array<{
    name: string | null
    id: string
  }> | null
  title: string | null
  date: string | null
}>
// Variable: GET_CARD_BLOG_POST_PAGINATION
// Query: *[_type =='post' && status == 'publish' && count((categories[]->name)[@ in $type]) > 0 && _id > $lastId][0...12] | order(date desc) {    "id": _id,  "featuredMedia": {    "url": featuredMedia.asset -> url,    "blur": featuredMedia.asset -> metadata.lqip  },  excerpt,  author->{    name,    "avatar": {      "url": avatar.asset -> url,    "blur": avatar.asset -> metadata.lqip    }  },  "slug": slug.current,  categories[]->{    name,    "id": _id,  },    title,    date  }
export type GET_CARD_BLOG_POST_PAGINATIONResult = Array<{
  id: string
  featuredMedia: {
    url: string | null
    blur: string | null
  }
  excerpt: string | null
  author: {
    name: string | null
    avatar: {
      url: string | null
      blur: string | null
    }
  } | null
  slug: string | null
  categories: Array<{
    name: string | null
    id: string
  }> | null
  title: string | null
  date: string | null
}>
// Variable: GET_TOTAL_BLOG_POST
// Query: count(*[_type =='post' && status == 'publish' && count((categories[]->name)[@ in $type]) > 0])
export type GET_TOTAL_BLOG_POSTResult = number
// Variable: GET_CARD_STYLE_ONE_PRODUCTS_BY_SEARCH
// Query: *[_type =='product' && status == 'publish' && price != null && count((categories[]->name)[@ in $category]) > 0 && title match $search || excerpt match $search] {  "id": _id,  "featuredMedia": {    "url": featuredMedia.asset->url,      "blur": featuredMedia.asset->metadata.lqip  },  title,  "slug": slug.current,  excerpt,  "categories": categories->{    "id": _id,    name,    slug  }}
export type GET_CARD_STYLE_ONE_PRODUCTS_BY_SEARCHResult = Array<
  | {
      id: string
      featuredMedia: {
        url: null
        blur: null
      }
      title: null
      slug: null
      excerpt: null
      categories: null
    }
  | {
      id: string
      featuredMedia: {
        url: null
        blur: null
      }
      title: string | null
      slug: null
      excerpt: null
      categories: null
    }
  | {
      id: string
      featuredMedia: {
        url: null
        blur: null
      }
      title: null
      slug: string | null
      excerpt: null
      categories: null
    }
  | {
      id: string
      featuredMedia: {
        url: string | null
        blur: string | null
      }
      title: string | null
      slug: string | null
      excerpt: string | null
      categories: null
    }
>

// Query TypeMap
import '@sanity/client'
declare module '@sanity/client' {
  interface SanityQueries {
    '*[_type==\'productCategory\' && main == true] | order(name asc){\n  "id": _id,\n  name, \n  description, \n  link, \n  "children": *[_type==\'productCategory\' && references(^._id)]\n   {\n      "id": _id,\n    name, \n    link\n   },\n  "featuredImage": *[_type==\'product\' && references(^._id)][0]{\n    "url":featuredMedia.asset->url,\n      "blur":featuredMedia.asset->metadata.lqip\n  }\n  }': GET_MENU_CATEGORIESResult
    '*[_type ==\'post\' && status == \'publish\' && count((categories[]->name)[@ in $type]) > 0][0...12] | order(date desc) {\n    "id": _id,\n  "featuredMedia": {\n    "url": featuredMedia.asset -> url,\n    "blur": featuredMedia.asset -> metadata.lqip\n  },\n  excerpt,\n  author->{\n    name,\n    "avatar": {\n      "url": avatar.asset -> url,\n    "blur": avatar.asset -> metadata.lqip\n    }\n  },\n  "slug": slug.current,\n  categories[]->{\n    name,\n    "id": _id,\n  },\n    title,\n    date\n  }': GET_CARD_BLOG_POSTResult
    '*[_type ==\'post\' && status == \'publish\' && count((categories[]->name)[@ in $type]) > 0 && _id > $lastId][0...12] | order(date desc) {\n    "id": _id,\n  "featuredMedia": {\n    "url": featuredMedia.asset -> url,\n    "blur": featuredMedia.asset -> metadata.lqip\n  },\n  excerpt,\n  author->{\n    name,\n    "avatar": {\n      "url": avatar.asset -> url,\n    "blur": avatar.asset -> metadata.lqip\n    }\n  },\n  "slug": slug.current,\n  categories[]->{\n    name,\n    "id": _id,\n  },\n    title,\n    date\n  }': GET_CARD_BLOG_POST_PAGINATIONResult
    "count(*[_type =='post' && status == 'publish' && count((categories[]->name)[@ in $type]) > 0])": GET_TOTAL_BLOG_POSTResult
    '*[_type ==\'product\' && status == \'publish\' && price != null && count((categories[]->name)[@ in $category]) > 0 && title match $search || excerpt match $search] {\n  "id": _id,\n  "featuredMedia": {\n    "url": featuredMedia.asset->url,\n      "blur": featuredMedia.asset->metadata.lqip\n  },\n  title,\n  "slug": slug.current,\n  excerpt,\n  "categories": categories->{\n    "id": _id,\n    name,\n    slug\n  }\n}': GET_CARD_STYLE_ONE_PRODUCTS_BY_SEARCHResult
  }
}
