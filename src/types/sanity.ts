/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type SanityImagePaletteSwatch = {
  _type: 'sanity.imagePaletteSwatch'
  background?: string
  foreground?: string
  population?: number
  title?: string
}

export type SanityImagePalette = {
  _type: 'sanity.imagePalette'
  darkMuted?: SanityImagePaletteSwatch
  lightVibrant?: SanityImagePaletteSwatch
  darkVibrant?: SanityImagePaletteSwatch
  vibrant?: SanityImagePaletteSwatch
  dominant?: SanityImagePaletteSwatch
  lightMuted?: SanityImagePaletteSwatch
  muted?: SanityImagePaletteSwatch
}

export type SanityImageDimensions = {
  _type: 'sanity.imageDimensions'
  height?: number
  width?: number
  aspectRatio?: number
}

export type Geopoint = {
  _type: 'geopoint'
  lat?: number
  lng?: number
  alt?: number
}

export type Order = {
  _id: string
  _type: 'order'
  _createdAt: string
  _updatedAt: string
  _rev: string
  userEmail?: {
    _ref: string
    _type: 'reference'
    _weak?: boolean
    [internalGroqTypeReferenceTo]?: 'costumer'
  }
  products?: Array<{
    product?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'product'
    }
    quantity?: number
    _key: string
  }>
  totalAmount?: number
  purchaseDate?: string
  paymentMethod?: string
  status?:
    | 'pendiente'
    | 'completado'
    | 'cancelado'
    | 'procesando'
    | 'enviado'
    | 'entregado'
  shippingAddress?: Array<
    {
      _key: string
    } & Address
  >
  currierCode?: string
  expectedDeliveryDate?: string
}

export type Address = {
  _type: 'address'
  firstName?: string
  address1?: string
  address2?: string
  city?: string
  postcode?: string
  state?: string
  email?: string
  phone?: string
}

export type Costumer = {
  _id: string
  _type: 'costumer'
  _createdAt: string
  _updatedAt: string
  _rev: string
  email?: string
  firstName?: string
  lastName?: string
  password?: string
  userName?: string
  billingAddress?: Array<
    {
      _key: string
    } & Address
  >
  shippingAddresses?: Array<
    {
      _key: string
    } & Address
  >
  isPayingCustomer?: boolean
  avatarUrl?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    _type: 'image'
  }
}

export type Brand = {
  _id: string
  _type: 'brand'
  _createdAt: string
  _updatedAt: string
  _rev: string
  image?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    _type: 'image'
  }
  title?: string
  link?: Slug
}

export type HomePage = {
  _id: string
  _type: 'homePage'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: string
  mainBanner?: Array<{
    image?: {
      asset?: {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
      }
      hotspot?: SanityImageHotspot
      crop?: SanityImageCrop
      _type: 'image'
    }
    link?: Slug
    _key: string
  }>
  mainCategory?: {
    _ref: string
    _type: 'reference'
    _weak?: boolean
    [internalGroqTypeReferenceTo]?: 'productCategory'
  }
  offer?: {
    active?: boolean
    date?: string
    banner?: {
      asset?: {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
      }
      hotspot?: SanityImageHotspot
      crop?: SanityImageCrop
      _type: 'image'
    }
  }
  secondaryCategory?: {
    _ref: string
    _type: 'reference'
    _weak?: boolean
    [internalGroqTypeReferenceTo]?: 'productCategory'
  }
  ads?: Array<{
    image?: {
      asset?: {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
      }
      hotspot?: SanityImageHotspot
      crop?: SanityImageCrop
      _type: 'image'
    }
    link?: string
    _key: string
  }>
  tertiaryCategory?: {
    _ref: string
    _type: 'reference'
    _weak?: boolean
    [internalGroqTypeReferenceTo]?: 'productCategory'
  }
  youtubeVideos?: Array<{
    title?: string
    videoId?: string
    _key: string
  }>
  productListBanner?: {
    banner?: {
      asset?: {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
      }
      hotspot?: SanityImageHotspot
      crop?: SanityImageCrop
      _type: 'image'
    }
    link?: string
  }
}

export type SubscriberNewsletter = {
  _id: string
  _type: 'subscriberNewsletter'
  _createdAt: string
  _updatedAt: string
  _rev: string
  email?: string
  subscribedDate?: string
  active?: boolean
}

export type Coupon = {
  _id: string
  _type: 'coupon'
  _createdAt: string
  _updatedAt: string
  _rev: string
  code?: string
  amount?: string
  date_created?: string
  date_modified?: string
  discount_type?: 'percent' | 'fixed_cart' | 'fixed_product' | 'sign_up_fee'
  description?: string
  date_expires?: string
  usage_count?: number
  product_ids?: Array<{
    _ref: string
    _type: 'reference'
    _weak?: boolean
    _key: string
    [internalGroqTypeReferenceTo]?: 'product'
  }>
  usage_limit?: number
  usage_limit_per_user?: number
  limit_usage_to_x_items?: number
  product_categories?: Array<{
    _ref: string
    _type: 'reference'
    _weak?: boolean
    _key: string
    [internalGroqTypeReferenceTo]?: 'productCategory'
  }>
  minimum_amount?: string
  maximum_amount?: string
}

export type ProductTag = {
  _id: string
  _type: 'productTag'
  _createdAt: string
  _updatedAt: string
  _rev: string
  description?: Array<{
    children?: Array<{
      marks?: Array<string>
      text?: string
      _type: 'span'
      _key: string
    }>
    style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote'
    listItem?: 'bullet' | 'number'
    markDefs?: Array<{
      href?: string
      _type: 'link'
      _key: string
    }>
    level?: number
    _type: 'block'
    _key: string
  }>
  name?: string
  slug?: Slug
  taxonomy?: string
}

export type ProductCategory = {
  _id: string
  _type: 'productCategory'
  _createdAt: string
  _updatedAt: string
  _rev: string
  description?: Array<{
    children?: Array<{
      marks?: Array<string>
      text?: string
      _type: 'span'
      _key: string
    }>
    style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote'
    listItem?: 'bullet' | 'number'
    markDefs?: Array<{
      href?: string
      _type: 'link'
      _key: string
    }>
    level?: number
    _type: 'block'
    _key: string
  }>
  name?: string
  slug?: Slug
  link?: Slug
  taxonomy?: string
  main?: boolean
  parent?: {
    _ref: string
    _type: 'reference'
    _weak?: boolean
    [internalGroqTypeReferenceTo]?: 'productCategory'
  }
}

export type Product = {
  _id: string
  _type: 'product'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: string
  status?: 'publish' | 'draft' | 'pending' | 'private'
  slug?: Slug
  link?: Slug
  price?: number
  sale?: {
    price?: number
    from?: string
    to?: string
  }
  downloads?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.fileAsset'
    }
    _type: 'file'
  }
  dimensions?: {
    length?: number
    width?: number
    height?: number
    weight?: number
    alt?: Array<
      | {
          children?: Array<{
            marks?: Array<string>
            text?: string
            _type: 'span'
            _key: string
          }>
          style?:
            | 'normal'
            | 'h1'
            | 'h2'
            | 'h3'
            | 'h4'
            | 'h5'
            | 'h6'
            | 'blockquote'
          listItem?: 'bullet' | 'number'
          markDefs?: Array<{
            href?: string
            _type: 'link'
            _key: string
          }>
          level?: number
          _type: 'block'
          _key: string
        }
      | {
          asset?: {
            _ref: string
            _type: 'reference'
            _weak?: boolean
            [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
          }
          hotspot?: SanityImageHotspot
          crop?: SanityImageCrop
          _type: 'image'
          _key: string
        }
      | ({
          _key: string
        } & ExternalImage)
    >
  }
  options?: {
    name?: string
    values?: Array<string>
  }
  date?: string
  modified?: string
  content?: Array<
    | {
        children?: Array<{
          marks?: Array<string>
          text?: string
          _type: 'span'
          _key: string
        }>
        style?:
          | 'normal'
          | 'h1'
          | 'h2'
          | 'h3'
          | 'h4'
          | 'h5'
          | 'h6'
          | 'blockquote'
        listItem?: 'bullet' | 'number'
        markDefs?: Array<{
          href?: string
          _type: 'link'
          _key: string
        }>
        level?: number
        _type: 'block'
        _key: string
      }
    | {
        asset?: {
          _ref: string
          _type: 'reference'
          _weak?: boolean
          [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
        }
        hotspot?: SanityImageHotspot
        crop?: SanityImageCrop
        _type: 'image'
        _key: string
      }
    | ({
        _key: string
      } & ExternalImage)
  >
  excerpt?: string
  featuredMedia?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    _type: 'image'
  }
  relatedImages?: Array<{
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    _type: 'image'
    _key: string
  }>
  stockQuantity?: number
  commentStatus?: 'open' | 'closed'
  productCategories?: Array<{
    _ref: string
    _type: 'reference'
    _weak?: boolean
    _key: string
    [internalGroqTypeReferenceTo]?: 'productCategory'
  }>
  productTag?: Array<{
    _ref: string
    _type: 'reference'
    _weak?: boolean
    _key: string
    [internalGroqTypeReferenceTo]?: 'productTag'
  }>
  variations?: Array<{
    _ref: string
    _type: 'reference'
    _weak?: boolean
    _key: string
    [internalGroqTypeReferenceTo]?: 'product'
  }>
  relatedProducts?: Array<{
    _ref: string
    _type: 'reference'
    _weak?: boolean
    _key: string
    [internalGroqTypeReferenceTo]?: 'product'
  }>
}

export type SanityFileAsset = {
  _id: string
  _type: 'sanity.fileAsset'
  _createdAt: string
  _updatedAt: string
  _rev: string
  originalFilename?: string
  label?: string
  title?: string
  description?: string
  altText?: string
  sha1hash?: string
  extension?: string
  mimeType?: string
  size?: number
  assetId?: string
  uploadId?: string
  path?: string
  url?: string
  source?: SanityAssetSourceData
}

export type Tag = {
  _id: string
  _type: 'tag'
  _createdAt: string
  _updatedAt: string
  _rev: string
  name?: string
  slug?: Slug
}

export type Post = {
  _id: string
  _type: 'post'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: string
  slug?: Slug
  date?: string
  modified?: string
  status?:
    | 'publish'
    | 'future'
    | 'draft'
    | 'pending'
    | 'private'
    | 'trash'
    | 'auto-draft'
    | 'inherit'
  content?: Array<
    | {
        children?: Array<{
          marks?: Array<string>
          text?: string
          _type: 'span'
          _key: string
        }>
        style?:
          | 'normal'
          | 'h1'
          | 'h2'
          | 'h3'
          | 'h4'
          | 'h5'
          | 'h6'
          | 'blockquote'
        listItem?: 'bullet' | 'number'
        markDefs?: Array<{
          href?: string
          _type: 'link'
          _key: string
        }>
        level?: number
        _type: 'block'
        _key: string
      }
    | {
        asset?: {
          _ref: string
          _type: 'reference'
          _weak?: boolean
          [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
        }
        hotspot?: SanityImageHotspot
        crop?: SanityImageCrop
        _type: 'image'
        _key: string
      }
    | {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        _key: string
        [internalGroqTypeReferenceTo]?: 'externalImage'
      }
  >
  excerpt?: string
  featuredMedia?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    _type: 'image'
  }
  sticky?: boolean
  author?: {
    _ref: string
    _type: 'reference'
    _weak?: boolean
    [internalGroqTypeReferenceTo]?: 'author'
  }
  categories?: Array<{
    _ref: string
    _type: 'reference'
    _weak?: boolean
    _key: string
    [internalGroqTypeReferenceTo]?: 'category'
  }>
  tags?: Array<{
    _ref: string
    _type: 'reference'
    _weak?: boolean
    _key: string
    [internalGroqTypeReferenceTo]?: 'tag'
  }>
}

export type ExternalImage = {
  _type: 'externalImage'
  url?: string
}

export type Category = {
  _id: string
  _type: 'category'
  _createdAt: string
  _updatedAt: string
  _rev: string
  name?: string
  slug?: Slug
}

export type Page = {
  _id: string
  _type: 'page'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: string
  slug?: Slug
  link?: Slug
  date?: string
  modified?: string
  status?:
    | 'publish'
    | 'future'
    | 'draft'
    | 'pending'
    | 'private'
    | 'trash'
    | 'auto-draft'
    | 'inherit'
  content?: Array<
    | {
        children?: Array<{
          marks?: Array<string>
          text?: string
          _type: 'span'
          _key: string
        }>
        style?:
          | 'normal'
          | 'h1'
          | 'h2'
          | 'h3'
          | 'h4'
          | 'h5'
          | 'h6'
          | 'blockquote'
        listItem?: 'bullet' | 'number'
        markDefs?: Array<{
          href?: string
          _type: 'link'
          _key: string
        }>
        level?: number
        _type: 'block'
        _key: string
      }
    | {
        asset?: {
          _ref: string
          _type: 'reference'
          _weak?: boolean
          [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
        }
        hotspot?: SanityImageHotspot
        crop?: SanityImageCrop
        _type: 'image'
        _key: string
      }
    | {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        _key: string
        [internalGroqTypeReferenceTo]?: 'externalImage'
      }
  >
  excerpt?: string
  featuredMedia?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    _type: 'image'
  }
  author?: {
    _ref: string
    _type: 'reference'
    _weak?: boolean
    [internalGroqTypeReferenceTo]?: 'author'
  }
}

export type Author = {
  _id: string
  _type: 'author'
  _createdAt: string
  _updatedAt: string
  _rev: string
  name?: string
  description?: string
  avatar?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    _type: 'image'
  }
}

export type SanityImageCrop = {
  _type: 'sanity.imageCrop'
  top?: number
  bottom?: number
  left?: number
  right?: number
}

export type SanityImageHotspot = {
  _type: 'sanity.imageHotspot'
  x?: number
  y?: number
  height?: number
  width?: number
}

export type SanityImageAsset = {
  _id: string
  _type: 'sanity.imageAsset'
  _createdAt: string
  _updatedAt: string
  _rev: string
  originalFilename?: string
  label?: string
  title?: string
  description?: string
  altText?: string
  sha1hash?: string
  extension?: string
  mimeType?: string
  size?: number
  assetId?: string
  uploadId?: string
  path?: string
  url?: string
  metadata?: SanityImageMetadata
  source?: SanityAssetSourceData
}

export type SanityAssetSourceData = {
  _type: 'sanity.assetSourceData'
  name?: string
  id?: string
  url?: string
}

export type SanityImageMetadata = {
  _type: 'sanity.imageMetadata'
  location?: Geopoint
  dimensions?: SanityImageDimensions
  palette?: SanityImagePalette
  lqip?: string
  blurHash?: string
  hasAlpha?: boolean
  isOpaque?: boolean
}

export type Slug = {
  _type: 'slug'
  current?: string
  source?: string
}

export type AllSanitySchemaTypes =
  | SanityImagePaletteSwatch
  | SanityImagePalette
  | SanityImageDimensions
  | Geopoint
  | Order
  | Address
  | Costumer
  | Brand
  | HomePage
  | SubscriberNewsletter
  | Coupon
  | ProductTag
  | ProductCategory
  | Product
  | SanityFileAsset
  | Tag
  | Post
  | ExternalImage
  | Category
  | Page
  | Author
  | SanityImageCrop
  | SanityImageHotspot
  | SanityImageAsset
  | SanityAssetSourceData
  | SanityImageMetadata
  | Slug
export declare const internalGroqTypeReferenceTo: unique symbol
// Source: ./src/sanity/lib/queries.ts
// Variable: GET_MAIN_PAGE
// Query: *[_type =='homePage'][0]{ mainBanner[]{    "url": image.asset->url,    "blur": image.asset->metadata.lqip,     "link": link.current  },  "mainCategory": mainCategory->{  name,  "slug": slug.current  },  "offer": offer{    date,    active,    "media": {      "url": banner.assets->url,      "blur": banner.assets->metadata.lqip    }  },    secondaryCategory->{      name,      "slug": slug.current    },    "ads": ads[]->{  "media": {    "url": asset->url,    "blur": asset->metadata.lqip  },  "link": link.current},"tertiaryCategory": tertiaryCategory->{  name,  "slug": slug.current  },youtubeVideos[]{      videoId,      "id": _key,      title  }}
export type GET_MAIN_PAGEResult = {
  mainBanner: Array<{
    url: string | null
    blur: string | null
    link: string | null
  }> | null
  mainCategory: {
    name: string | null
    slug: string | null
  } | null
  offer: {
    date: string | null
    active: boolean | null
    media: {
      url: null
      blur: null
    }
  } | null
  secondaryCategory: {
    name: string | null
    slug: string | null
  } | null
  ads: Array<null> | null
  tertiaryCategory: {
    name: string | null
    slug: string | null
  } | null
  youtubeVideos: Array<{
    videoId: string | null
    id: string
    title: string | null
  }> | null
} | null
// Variable: GET_MENU_CATEGORIES
// Query: *[_type=='productCategory' && main == true] | order(name asc){  "id": _id,  name,   description,   "slug": slug.current,   "children": *[_type=='productCategory' && references(^._id)]   {      "id": _id,    name,     "slug": slug.current,    },  "featuredImage": *[_type=='product' && references(^._id)][0]{    "url":featuredMedia.asset->url,      "blur":featuredMedia.asset->metadata.lqip  }  }
export type GET_MENU_CATEGORIESResult = Array<{
  id: string
  name: string | null
  description: Array<{
    children?: Array<{
      marks?: Array<string>
      text?: string
      _type: 'span'
      _key: string
    }>
    style?: 'blockquote' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'normal'
    listItem?: 'bullet' | 'number'
    markDefs?: Array<{
      href?: string
      _type: 'link'
      _key: string
    }>
    level?: number
    _type: 'block'
    _key: string
  }> | null
  slug: string | null
  children: Array<{
    id: string
    name: string | null
    slug: string | null
  }>
  featuredImage: {
    url: string | null
    blur: string | null
  } | null
}>
// Variable: GET_COSTUMER_SERVICES_SIDEBAR_MENU
// Query: *[_type =='page' && status == 'publish']{  "id": _id,  "slug": slug.current,  title,  "link": link.current}
export type GET_COSTUMER_SERVICES_SIDEBAR_MENUResult = Array<{
  id: string
  slug: string | null
  title: string | null
  link: string | null
}>
// Variable: GET_COSTUMER_SERVICES_PAGE
// Query: *[_type =='page' && status == 'publish' && slug.current in $slug][0]{  "id": _id,  "slug": slug.current,  title,  "link": link.current,  excerpt,  content}
export type GET_COSTUMER_SERVICES_PAGEResult = {
  id: string
  slug: string | null
  title: string | null
  link: string | null
  excerpt: string | null
  content: Array<
    | {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        _key: string
        [internalGroqTypeReferenceTo]?: 'externalImage'
      }
    | {
        children?: Array<{
          marks?: Array<string>
          text?: string
          _type: 'span'
          _key: string
        }>
        style?:
          | 'blockquote'
          | 'h1'
          | 'h2'
          | 'h3'
          | 'h4'
          | 'h5'
          | 'h6'
          | 'normal'
        listItem?: 'bullet' | 'number'
        markDefs?: Array<{
          href?: string
          _type: 'link'
          _key: string
        }>
        level?: number
        _type: 'block'
        _key: string
      }
    | {
        asset?: {
          _ref: string
          _type: 'reference'
          _weak?: boolean
          [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
        }
        hotspot?: SanityImageHotspot
        crop?: SanityImageCrop
        _type: 'image'
        _key: string
      }
  > | null
} | null
// Variable: GET_CARD_BLOG_POST
// Query: *[_type =='post' && status == 'publish' && count((categories[]->name)[@ in $type]) > 0][0...12] | order(date desc) {    "id": _id,  "featuredMedia": {    "url": featuredMedia.asset -> url,    "blur": featuredMedia.asset -> metadata.lqip  },  excerpt,  author->{    name,    "avatar": {      "url": avatar.asset -> url,    "blur": avatar.asset -> metadata.lqip    }  },  "slug": slug.current,  categories[]->{    name,    "id": _id,  },    title,    date  }
export type GET_CARD_BLOG_POSTResult = Array<{
  id: string
  featuredMedia: {
    url: string | null
    blur: string | null
  }
  excerpt: string | null
  author: {
    name: string | null
    avatar: {
      url: string | null
      blur: string | null
    }
  } | null
  slug: string | null
  categories: Array<{
    name: string | null
    id: string
  }> | null
  title: string | null
  date: string | null
}>
// Variable: GET_CARD_BLOG_POST_BY_TAGS
// Query: *[_type =='post' && status == 'publish' && count((tags[]->slug.current)[@ in $slug]) > 0][0...24] | order(date desc) {    "id": _id,  "featuredMedia": {    "url": featuredMedia.asset -> url,    "blur": featuredMedia.asset -> metadata.lqip  },  excerpt,  author->{    name,    "avatar": {      "url": avatar.asset -> url,    "blur": avatar.asset -> metadata.lqip    }  },  "slug": slug.current,  categories[]->{    name,    "id": _id,  },    title,    date  }
export type GET_CARD_BLOG_POST_BY_TAGSResult = Array<{
  id: string
  featuredMedia: {
    url: string | null
    blur: string | null
  }
  excerpt: string | null
  author: {
    name: string | null
    avatar: {
      url: string | null
      blur: string | null
    }
  } | null
  slug: string | null
  categories: Array<{
    name: string | null
    id: string
  }> | null
  title: string | null
  date: string | null
}>
// Variable: GET_CARD_BLOG_POST_BY_CATEGORIES
// Query: *[_type =='post' && status == 'publish' && count((categories[]->slug.current)[@ in $slug]) > 0][0...24] | order(date desc) {    "id": _id,  "featuredMedia": {    "url": featuredMedia.asset -> url,    "blur": featuredMedia.asset -> metadata.lqip  },  excerpt,  author->{    name,    "avatar": {      "url": avatar.asset -> url,    "blur": avatar.asset -> metadata.lqip    }  },  "slug": slug.current,  categories[]->{    name,    "id": _id,  },    title,    date  }
export type GET_CARD_BLOG_POST_BY_CATEGORIESResult = Array<{
  id: string
  featuredMedia: {
    url: string | null
    blur: string | null
  }
  excerpt: string | null
  author: {
    name: string | null
    avatar: {
      url: string | null
      blur: string | null
    }
  } | null
  slug: string | null
  categories: Array<{
    name: string | null
    id: string
  }> | null
  title: string | null
  date: string | null
}>
// Variable: GET_LATEST_BLOG_POSTS_BY_CATEGORIES
// Query: *[_type =='post' && status == 'publish' && count((categories[]->name)[@ in $type]) > 0][0...3] | order(date desc) {    "id": _id,  "featuredMedia": {    "url": featuredMedia.asset -> url,    "blur": featuredMedia.asset -> metadata.lqip  },    title,    date,    "slug": slug.current  }
export type GET_LATEST_BLOG_POSTS_BY_CATEGORIESResult = Array<{
  id: string
  featuredMedia: {
    url: string | null
    blur: string | null
  }
  title: string | null
  date: string | null
  slug: string | null
}>
// Variable: GET_BLOG_ARTICLE_BY_SLUG
// Query: *[_type=='post' && status == 'publish' && slug.current == $slug][0]{   "id": _id,  "featuredMedia": {    "url": featuredMedia.asset -> url,    "blur": featuredMedia.asset -> metadata.lqip  },  excerpt,  author->{    name,    "avatar": {      "url": avatar.asset -> url,    "blur": avatar.asset -> metadata.lqip    }  },  "slug": slug.current,  categories[]->{    name,    "id": _id,    "slug": slug.current,    "count": count(*[_type == 'post' && status == 'publish' && references(^._id)])  },    title,    date,    content,    tags[]->{    name,    "id": _id,    "slug": slug.current,    "count": count(*[_type == 'post' && status == 'publish' && references(^._id)])  },}
export type GET_BLOG_ARTICLE_BY_SLUGResult = {
  id: string
  featuredMedia: {
    url: string | null
    blur: string | null
  }
  excerpt: string | null
  author: {
    name: string | null
    avatar: {
      url: string | null
      blur: string | null
    }
  } | null
  slug: string | null
  categories: Array<{
    name: string | null
    id: string
    slug: string | null
    count: number
  }> | null
  title: string | null
  date: string | null
  content: Array<
    | {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        _key: string
        [internalGroqTypeReferenceTo]?: 'externalImage'
      }
    | {
        children?: Array<{
          marks?: Array<string>
          text?: string
          _type: 'span'
          _key: string
        }>
        style?:
          | 'blockquote'
          | 'h1'
          | 'h2'
          | 'h3'
          | 'h4'
          | 'h5'
          | 'h6'
          | 'normal'
        listItem?: 'bullet' | 'number'
        markDefs?: Array<{
          href?: string
          _type: 'link'
          _key: string
        }>
        level?: number
        _type: 'block'
        _key: string
      }
    | {
        asset?: {
          _ref: string
          _type: 'reference'
          _weak?: boolean
          [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
        }
        hotspot?: SanityImageHotspot
        crop?: SanityImageCrop
        _type: 'image'
        _key: string
      }
  > | null
  tags: Array<{
    name: string | null
    id: string
    slug: string | null
    count: number
  }> | null
} | null
// Variable: GET_CARD_BLOG_POST_PAGINATION
// Query: *[_type =='post' && status == 'publish' && count((categories[]->name)[@ in $type]) > 0 && _id > $lastId][0...12] | order(date desc) {    "id": _id,  "featuredMedia": {    "url": featuredMedia.asset -> url,    "blur": featuredMedia.asset -> metadata.lqip  },  excerpt,  author->{    name,    "avatar": {      "url": avatar.asset -> url,    "blur": avatar.asset -> metadata.lqip    }  },  "slug": slug.current,  categories[]->{    name,    "id": _id,  },    title,    date  }
export type GET_CARD_BLOG_POST_PAGINATIONResult = Array<{
  id: string
  featuredMedia: {
    url: string | null
    blur: string | null
  }
  excerpt: string | null
  author: {
    name: string | null
    avatar: {
      url: string | null
      blur: string | null
    }
  } | null
  slug: string | null
  categories: Array<{
    name: string | null
    id: string
  }> | null
  title: string | null
  date: string | null
}>
// Variable: GET_TOTAL_BLOG_POST
// Query: count(*[_type =='post' && status == 'publish' && count((categories[]->name)[@ in $type]) > 0])
export type GET_TOTAL_BLOG_POSTResult = number
// Variable: GET_BRANDS
// Query: *[_type=='brand']{  "id": _id,  "slug": link.current,  "media": {    "url": image.asset->url,    "blur": image.asset->metadata.lqip  },  title}
export type GET_BRANDSResult = Array<{
  id: string
  slug: string | null
  media: {
    url: string | null
    blur: string | null
  }
  title: string | null
}>
// Variable: GET_CARD_STYLE_ONE_PRODUCTS_BY_SEARCH
// Query: *[_type=='product' && status=='publish' && defined(price) && (title match $search || excerpt match $search)]{  "id": _id,  "featuredMedia": {    "url": featuredMedia.asset->url,      "blur": featuredMedia.asset->metadata.lqip  },  title,  "slug": slug.current,  excerpt,  "categories": productCategories[]->{    "id": _id,    name,    "slug": slug.current  },  content,  price,  sale,  dimensions,  "stockQuantity": stock_quantity,  options,  date,  "tags": productTags[]->{    "id": _id,    name,    "slug": slug.current  }, "otherImages": relatedImages[].asset->{  "url": url,  "blur": metadata.lqip}}
export type GET_CARD_STYLE_ONE_PRODUCTS_BY_SEARCHResult = Array<{
  id: string
  featuredMedia: {
    url: string | null
    blur: string | null
  }
  title: string | null
  slug: string | null
  excerpt: string | null
  categories: Array<{
    id: string
    name: string | null
    slug: string | null
  }> | null
  content: Array<
    | ({
        _key: string
      } & ExternalImage)
    | {
        children?: Array<{
          marks?: Array<string>
          text?: string
          _type: 'span'
          _key: string
        }>
        style?:
          | 'blockquote'
          | 'h1'
          | 'h2'
          | 'h3'
          | 'h4'
          | 'h5'
          | 'h6'
          | 'normal'
        listItem?: 'bullet' | 'number'
        markDefs?: Array<{
          href?: string
          _type: 'link'
          _key: string
        }>
        level?: number
        _type: 'block'
        _key: string
      }
    | {
        asset?: {
          _ref: string
          _type: 'reference'
          _weak?: boolean
          [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
        }
        hotspot?: SanityImageHotspot
        crop?: SanityImageCrop
        _type: 'image'
        _key: string
      }
  > | null
  price: number | null
  sale: {
    price?: number
    from?: string
    to?: string
  } | null
  dimensions: {
    length?: number
    width?: number
    height?: number
    weight?: number
    alt?: Array<
      | ({
          _key: string
        } & ExternalImage)
      | {
          children?: Array<{
            marks?: Array<string>
            text?: string
            _type: 'span'
            _key: string
          }>
          style?:
            | 'blockquote'
            | 'h1'
            | 'h2'
            | 'h3'
            | 'h4'
            | 'h5'
            | 'h6'
            | 'normal'
          listItem?: 'bullet' | 'number'
          markDefs?: Array<{
            href?: string
            _type: 'link'
            _key: string
          }>
          level?: number
          _type: 'block'
          _key: string
        }
      | {
          asset?: {
            _ref: string
            _type: 'reference'
            _weak?: boolean
            [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
          }
          hotspot?: SanityImageHotspot
          crop?: SanityImageCrop
          _type: 'image'
          _key: string
        }
    >
  } | null
  stockQuantity: null
  options: {
    name?: string
    values?: Array<string>
  } | null
  date: string | null
  tags: null
  otherImages: Array<{
    url: string | null
    blur: string | null
  } | null> | null
}>
// Variable: GET_CARD_STYLE_ONE_PRODUCTS_BY_CATEGORY
// Query: *[_type=='product' && status=='publish' && defined(price) && count((productCategories[]->name)[@ in $type]) > 0]{  "id": _id,  "featuredMedia": {    "url": featuredMedia.asset->url,      "blur": featuredMedia.asset->metadata.lqip  },  title,  "slug": slug.current,  excerpt,  "categories": productCategories[]->{    "id": _id,    name,    "slug": slug.current  },  content,  price,  sale,  createdAt,  dimensions,  "stockQuantity": stock_quantity,  options,  date,  "tags": productTags[]->{    "id": _id,    name,    "slug": slug.current  }, "otherImages": relatedImages[].asset->{  "url": url,  "blur": metadata.lqip}}
export type GET_CARD_STYLE_ONE_PRODUCTS_BY_CATEGORYResult = Array<{
  id: string
  featuredMedia: {
    url: string | null
    blur: string | null
  }
  title: string | null
  slug: string | null
  excerpt: string | null
  categories: Array<{
    id: string
    name: string | null
    slug: string | null
  }> | null
  content: Array<
    | ({
        _key: string
      } & ExternalImage)
    | {
        children?: Array<{
          marks?: Array<string>
          text?: string
          _type: 'span'
          _key: string
        }>
        style?:
          | 'blockquote'
          | 'h1'
          | 'h2'
          | 'h3'
          | 'h4'
          | 'h5'
          | 'h6'
          | 'normal'
        listItem?: 'bullet' | 'number'
        markDefs?: Array<{
          href?: string
          _type: 'link'
          _key: string
        }>
        level?: number
        _type: 'block'
        _key: string
      }
    | {
        asset?: {
          _ref: string
          _type: 'reference'
          _weak?: boolean
          [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
        }
        hotspot?: SanityImageHotspot
        crop?: SanityImageCrop
        _type: 'image'
        _key: string
      }
  > | null
  price: number | null
  sale: {
    price?: number
    from?: string
    to?: string
  } | null
  createdAt: null
  dimensions: {
    length?: number
    width?: number
    height?: number
    weight?: number
    alt?: Array<
      | ({
          _key: string
        } & ExternalImage)
      | {
          children?: Array<{
            marks?: Array<string>
            text?: string
            _type: 'span'
            _key: string
          }>
          style?:
            | 'blockquote'
            | 'h1'
            | 'h2'
            | 'h3'
            | 'h4'
            | 'h5'
            | 'h6'
            | 'normal'
          listItem?: 'bullet' | 'number'
          markDefs?: Array<{
            href?: string
            _type: 'link'
            _key: string
          }>
          level?: number
          _type: 'block'
          _key: string
        }
      | {
          asset?: {
            _ref: string
            _type: 'reference'
            _weak?: boolean
            [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
          }
          hotspot?: SanityImageHotspot
          crop?: SanityImageCrop
          _type: 'image'
          _key: string
        }
    >
  } | null
  stockQuantity: null
  options: {
    name?: string
    values?: Array<string>
  } | null
  date: string | null
  tags: null
  otherImages: Array<{
    url: string | null
    blur: string | null
  } | null> | null
}>
// Variable: GET_BRANDS_AND_PRODUCTS
// Query: *[_type=='brand' && link.current == $slug][0]{  title,   "banner": *[_type =='homePage'][0]{      "url": productListBanner.banner.asset->url,      "blur": productListBanner.banner.asset->metadata.lqip,      "link": productListBanner.link  },  "products": *[_type=='product' && status=='publish' && defined(price) && title match ^.title]{  "id": _id,  "featuredMedia": {    "url": featuredMedia.asset->url,      "blur": featuredMedia.asset->metadata.lqip  },  title,  "slug": slug.current,  excerpt,  "categories": productCategories[]->{    "id": _id,    name,    "slug": slug.current  },  content,  price,  sale,  createdAt,  dimensions,  "stockQuantity": stock_quantity,  options,  date,  "tags": productTags[]->{    "id": _id,    name,    "slug": slug.current  }, "otherImages": relatedImages[].asset->{  "url": url,  "blur": metadata.lqip}}  }
export type GET_BRANDS_AND_PRODUCTSResult = {
  title: string | null
  banner: {
    url: string | null
    blur: string | null
    link: string | null
  } | null
  products: Array<{
    id: string
    featuredMedia: {
      url: string | null
      blur: string | null
    }
    title: string | null
    slug: string | null
    excerpt: string | null
    categories: Array<{
      id: string
      name: string | null
      slug: string | null
    }> | null
    content: Array<
      | ({
          _key: string
        } & ExternalImage)
      | {
          children?: Array<{
            marks?: Array<string>
            text?: string
            _type: 'span'
            _key: string
          }>
          style?:
            | 'blockquote'
            | 'h1'
            | 'h2'
            | 'h3'
            | 'h4'
            | 'h5'
            | 'h6'
            | 'normal'
          listItem?: 'bullet' | 'number'
          markDefs?: Array<{
            href?: string
            _type: 'link'
            _key: string
          }>
          level?: number
          _type: 'block'
          _key: string
        }
      | {
          asset?: {
            _ref: string
            _type: 'reference'
            _weak?: boolean
            [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
          }
          hotspot?: SanityImageHotspot
          crop?: SanityImageCrop
          _type: 'image'
          _key: string
        }
    > | null
    price: number | null
    sale: {
      price?: number
      from?: string
      to?: string
    } | null
    createdAt: null
    dimensions: {
      length?: number
      width?: number
      height?: number
      weight?: number
      alt?: Array<
        | ({
            _key: string
          } & ExternalImage)
        | {
            children?: Array<{
              marks?: Array<string>
              text?: string
              _type: 'span'
              _key: string
            }>
            style?:
              | 'blockquote'
              | 'h1'
              | 'h2'
              | 'h3'
              | 'h4'
              | 'h5'
              | 'h6'
              | 'normal'
            listItem?: 'bullet' | 'number'
            markDefs?: Array<{
              href?: string
              _type: 'link'
              _key: string
            }>
            level?: number
            _type: 'block'
            _key: string
          }
        | {
            asset?: {
              _ref: string
              _type: 'reference'
              _weak?: boolean
              [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
            }
            hotspot?: SanityImageHotspot
            crop?: SanityImageCrop
            _type: 'image'
            _key: string
          }
      >
    } | null
    stockQuantity: null
    options: {
      name?: string
      values?: Array<string>
    } | null
    date: string | null
    tags: null
    otherImages: Array<{
      url: string | null
      blur: string | null
    } | null> | null
  }>
} | null
// Variable: GET_PRODUCTS_AND_BRAND_FOR_FILTERING
// Query: *[_type=='brand' && link.current == $slug][0] {  "products": *[_type=='product' && status=='publish' && defined(price) && title match ^.title]{     "categories": productCategories[]->{    "id": _id,    name,    "slug": slug.current,  },    price  }  }
export type GET_PRODUCTS_AND_BRAND_FOR_FILTERINGResult = {
  products: Array<{
    categories: Array<{
      id: string
      name: string | null
      slug: string | null
    }> | null
    price: number | null
  }>
} | null
// Variable: GET_CATEGORY_AND_PRODUCTS
// Query: *[_type=='productCategory' && slug.current == $slug][0]{  name,   description,  "banner": *[_type =='homePage'][0]{      "url": productListBanner.banner.asset->url,      "blur": productListBanner.banner.asset->metadata.lqip,      "link": productListBanner.link  },  "children": *[_type=='productCategory' && references(^._id)]   {    "id": _id,    name,     link   },  "products": *[_type=='product' && status=='publish' && defined(price) && references(^._id)]{  "id": _id,  "featuredMedia": {    "url": featuredMedia.asset->url,      "blur": featuredMedia.asset->metadata.lqip  },  title,  "slug": slug.current,  excerpt,  "categories": productCategories[]->{    "id": _id,    name,    "slug": slug.current  },  content,  price,  sale,  createdAt,  dimensions,  "stockQuantity": stock_quantity,  options,  date,  "tags": productTags[]->{    "id": _id,    name,    "slug": slug.current  }, "otherImages": relatedImages[].asset->{  "url": url,  "blur": metadata.lqip}}  }
export type GET_CATEGORY_AND_PRODUCTSResult = {
  name: string | null
  description: Array<{
    children?: Array<{
      marks?: Array<string>
      text?: string
      _type: 'span'
      _key: string
    }>
    style?: 'blockquote' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'normal'
    listItem?: 'bullet' | 'number'
    markDefs?: Array<{
      href?: string
      _type: 'link'
      _key: string
    }>
    level?: number
    _type: 'block'
    _key: string
  }> | null
  banner: {
    url: string | null
    blur: string | null
    link: string | null
  } | null
  children: Array<{
    id: string
    name: string | null
    link: Slug | null
  }>
  products: Array<{
    id: string
    featuredMedia: {
      url: string | null
      blur: string | null
    }
    title: string | null
    slug: string | null
    excerpt: string | null
    categories: Array<{
      id: string
      name: string | null
      slug: string | null
    }> | null
    content: Array<
      | ({
          _key: string
        } & ExternalImage)
      | {
          children?: Array<{
            marks?: Array<string>
            text?: string
            _type: 'span'
            _key: string
          }>
          style?:
            | 'blockquote'
            | 'h1'
            | 'h2'
            | 'h3'
            | 'h4'
            | 'h5'
            | 'h6'
            | 'normal'
          listItem?: 'bullet' | 'number'
          markDefs?: Array<{
            href?: string
            _type: 'link'
            _key: string
          }>
          level?: number
          _type: 'block'
          _key: string
        }
      | {
          asset?: {
            _ref: string
            _type: 'reference'
            _weak?: boolean
            [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
          }
          hotspot?: SanityImageHotspot
          crop?: SanityImageCrop
          _type: 'image'
          _key: string
        }
    > | null
    price: number | null
    sale: {
      price?: number
      from?: string
      to?: string
    } | null
    createdAt: null
    dimensions: {
      length?: number
      width?: number
      height?: number
      weight?: number
      alt?: Array<
        | ({
            _key: string
          } & ExternalImage)
        | {
            children?: Array<{
              marks?: Array<string>
              text?: string
              _type: 'span'
              _key: string
            }>
            style?:
              | 'blockquote'
              | 'h1'
              | 'h2'
              | 'h3'
              | 'h4'
              | 'h5'
              | 'h6'
              | 'normal'
            listItem?: 'bullet' | 'number'
            markDefs?: Array<{
              href?: string
              _type: 'link'
              _key: string
            }>
            level?: number
            _type: 'block'
            _key: string
          }
        | {
            asset?: {
              _ref: string
              _type: 'reference'
              _weak?: boolean
              [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
            }
            hotspot?: SanityImageHotspot
            crop?: SanityImageCrop
            _type: 'image'
            _key: string
          }
      >
    } | null
    stockQuantity: null
    options: {
      name?: string
      values?: Array<string>
    } | null
    date: string | null
    tags: null
    otherImages: Array<{
      url: string | null
      blur: string | null
    } | null> | null
  }>
} | null
// Variable: GET_PRODUCTS_AND_CATEGORIES_FOR_FILTERING
// Query: *[_type=='productCategory' && slug.current == $slug][0] {  "children": *[_type=='productCategory' && references(^._id)]   {      "id": _id,    name,     "slug": slug.current,    },  "products": *[_type=='product' && status=='publish' && defined(price) && references(^._id)]{     "categories": productCategories[]->{    "id": _id,    name,    "slug": slug.current,  },    price  }  }
export type GET_PRODUCTS_AND_CATEGORIES_FOR_FILTERINGResult = {
  children: Array<{
    id: string
    name: string | null
    slug: string | null
  }>
  products: Array<{
    categories: Array<{
      id: string
      name: string | null
      slug: string | null
    }> | null
    price: number | null
  }>
} | null
// Variable: GET_WHOLE_PRODUCT_BY_SLUG
// Query: *[_type=='product' && status=='publish' && defined(price) && slug.current == $slug][0]{  "id": _id,  "featuredMedia": {    "url": featuredMedia.asset->url,      "blur": featuredMedia.asset->metadata.lqip  },  title,  "slug": slug.current,  excerpt,  "categories": productCategories[]->{    "id": _id,    name,    "slug": slug.current  },  content,  price,  sale,  createdAt,  dimensions,  "stockQuantity": stock_quantity,  options,  date,  "tags": productTag[]->{    "id": _id,    name,    "slug": slug.current  }, "otherImages": relatedImages[].asset->{  "url": url,  "blur": metadata.lqip},"downloads": downloads.asset->{    title,    url  }}
export type GET_WHOLE_PRODUCT_BY_SLUGResult = {
  id: string
  featuredMedia: {
    url: string | null
    blur: string | null
  }
  title: string | null
  slug: string | null
  excerpt: string | null
  categories: Array<{
    id: string
    name: string | null
    slug: string | null
  }> | null
  content: Array<
    | ({
        _key: string
      } & ExternalImage)
    | {
        children?: Array<{
          marks?: Array<string>
          text?: string
          _type: 'span'
          _key: string
        }>
        style?:
          | 'blockquote'
          | 'h1'
          | 'h2'
          | 'h3'
          | 'h4'
          | 'h5'
          | 'h6'
          | 'normal'
        listItem?: 'bullet' | 'number'
        markDefs?: Array<{
          href?: string
          _type: 'link'
          _key: string
        }>
        level?: number
        _type: 'block'
        _key: string
      }
    | {
        asset?: {
          _ref: string
          _type: 'reference'
          _weak?: boolean
          [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
        }
        hotspot?: SanityImageHotspot
        crop?: SanityImageCrop
        _type: 'image'
        _key: string
      }
  > | null
  price: number | null
  sale: {
    price?: number
    from?: string
    to?: string
  } | null
  createdAt: null
  dimensions: {
    length?: number
    width?: number
    height?: number
    weight?: number
    alt?: Array<
      | ({
          _key: string
        } & ExternalImage)
      | {
          children?: Array<{
            marks?: Array<string>
            text?: string
            _type: 'span'
            _key: string
          }>
          style?:
            | 'blockquote'
            | 'h1'
            | 'h2'
            | 'h3'
            | 'h4'
            | 'h5'
            | 'h6'
            | 'normal'
          listItem?: 'bullet' | 'number'
          markDefs?: Array<{
            href?: string
            _type: 'link'
            _key: string
          }>
          level?: number
          _type: 'block'
          _key: string
        }
      | {
          asset?: {
            _ref: string
            _type: 'reference'
            _weak?: boolean
            [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
          }
          hotspot?: SanityImageHotspot
          crop?: SanityImageCrop
          _type: 'image'
          _key: string
        }
    >
  } | null
  stockQuantity: null
  options: {
    name?: string
    values?: Array<string>
  } | null
  date: string | null
  tags: Array<{
    id: string
    name: string | null
    slug: string | null
  }> | null
  otherImages: Array<{
    url: string | null
    blur: string | null
  } | null> | null
  downloads: {
    title: string | null
    url: string | null
  } | null
} | null
// Variable: GET_COUPONS_FOR_VALIDATION
// Query: *[_type=='coupon' && code == $code][0] {   amount,    date_expires,    discount_type,    limit_usage_to_x_items,    maximum_amount,    minimum_amount,    "product_categories": product_categories[]->{     "id": _id    },    "product_ids": product_ids[]->{     "id": _id     },    usage_limit,    usage_count,    usage_limit_per_user}
export type GET_COUPONS_FOR_VALIDATIONResult = {
  amount: string | null
  date_expires: string | null
  discount_type:
    | 'fixed_cart'
    | 'fixed_product'
    | 'percent'
    | 'sign_up_fee'
    | null
  limit_usage_to_x_items: number | null
  maximum_amount: string | null
  minimum_amount: string | null
  product_categories: Array<{
    id: string
  }> | null
  product_ids: Array<{
    id: string
  }> | null
  usage_limit: number | null
  usage_count: number | null
  usage_limit_per_user: number | null
} | null
// Variable: GET_USER_INFO
// Query: *[_type =='costumer' && _id == $id][0]{  "id": _id,  "active": isPayingCustomer,  userName,  lastName,  firstName,  password,    email,  "avatar": avatarUrl.asset->{    "url": url,    "blur": metadata.lqip  }, "billingAddress": billingAddress[0],  shippingAddresses}
export type GET_USER_INFOResult = {
  id: string
  active: boolean | null
  userName: string | null
  lastName: string | null
  firstName: string | null
  password: string | null
  email: string | null
  avatar: {
    url: string | null
    blur: string | null
  } | null
  billingAddress:
    | ({
        _key: string
      } & Address)
    | null
  shippingAddresses: Array<
    {
      _key: string
    } & Address
  > | null
} | null
// Variable: GET_USER_FOR_AUTH
// Query: *[_type =='costumer' && email == $email][0]{  "id": _id,   userName,  lastName,  firstName,  password,    email,   "avatar": avatarUrl.asset->{    "url": url,  },}
export type GET_USER_FOR_AUTHResult = {
  id: string
  userName: string | null
  lastName: string | null
  firstName: string | null
  password: string | null
  email: string | null
  avatar: {
    url: string | null
  } | null
} | null
// Variable: GET_ORDERS_BY_USER_ID
// Query: *[_type =='order' && userEmail._ref == $id ]{  "id": _id,  purchaseDate,  currierCode,  status,  expectedDeliveryDate,  paymentMethod,  "shippingAddress": shippingAddress[0],  totalAmount,  products[]{      product-> {        "id": _id,        title,        price,        "featuredMedia": {          "url": featuredMedia.asset->url,            "blur": featuredMedia.asset->metadata.lqip        },        sale      },      quantity    }}
export type GET_ORDERS_BY_USER_IDResult = Array<{
  id: string
  purchaseDate: string | null
  currierCode: string | null
  status:
    | 'cancelado'
    | 'completado'
    | 'entregado'
    | 'enviado'
    | 'pendiente'
    | 'procesando'
    | null
  expectedDeliveryDate: string | null
  paymentMethod: string | null
  shippingAddress:
    | ({
        _key: string
      } & Address)
    | null
  totalAmount: number | null
  products: Array<{
    product: {
      id: string
      title: string | null
      price: number | null
      featuredMedia: {
        url: string | null
        blur: string | null
      }
      sale: {
        price?: number
        from?: string
        to?: string
      } | null
    } | null
    quantity: number | null
  }> | null
}>
// Variable: GET_STATIC_BLOG_OR_NEWS_SLUG
// Query: *[_type =='post' && status == 'publish' && count((categories[]->name)[@ in $type]) > 0] | order(date desc) {  "slug": slug.current  }
export type GET_STATIC_BLOG_OR_NEWS_SLUGResult = Array<{
  slug: string | null
}>
// Variable: GET_STATIC_TAGS_SLUGS
// Query: *[_type =='tag'] | order(date desc) {  "slug": slug.current  }
export type GET_STATIC_TAGS_SLUGSResult = Array<{
  slug: string | null
}>
// Variable: GET_STATIC_CATEGORIES_SLUGS
// Query: *[_type =='category'] | order(date desc) {  "slug": slug.current  }
export type GET_STATIC_CATEGORIES_SLUGSResult = Array<{
  slug: string | null
}>
// Variable: GET_STATIC_COSTUMER_SERVICES_PAGES_SUG
// Query: *[_type =='page' && status == 'publish']{  "slug": slug.current,}
export type GET_STATIC_COSTUMER_SERVICES_PAGES_SUGResult = Array<{
  slug: string | null
}>
// Variable: GET_STATIC_PRODUCTS_SLUG
// Query: *[_type=='product' && status=='publish' && defined(price)]{  "slug": slug.current,}
export type GET_STATIC_PRODUCTS_SLUGResult = Array<{
  slug: string | null
}>

// Query TypeMap
import '@sanity/client'
declare module '@sanity/client' {
  interface SanityQueries {
    '*[_type ==\'homePage\'][0]{\n mainBanner[]{\n    "url": image.asset->url,\n    "blur": image.asset->metadata.lqip,\n     "link": link.current\n  },\n  "mainCategory": mainCategory->{\n  name,\n  "slug": slug.current\n  },\n  "offer": offer{\n    date,\n    active,\n    "media": {\n      "url": banner.assets->url,\n      "blur": banner.assets->metadata.lqip\n    }\n  },\n    secondaryCategory->{\n      name,\n      "slug": slug.current\n    },\n    "ads": ads[]->{\n  "media": {\n    "url": asset->url,\n    "blur": asset->metadata.lqip\n  },\n  "link": link.current\n},\n"tertiaryCategory": tertiaryCategory->{\n  name,\n  "slug": slug.current\n  },\nyoutubeVideos[]{\n      videoId,\n      "id": _key,\n      title\n  }\n}': GET_MAIN_PAGEResult
    '*[_type==\'productCategory\' && main == true] | order(name asc){\n  "id": _id,\n  name, \n  description, \n  "slug": slug.current, \n  "children": *[_type==\'productCategory\' && references(^._id)]\n   {\n      "id": _id,\n    name, \n    "slug": slug.current, \n   },\n  "featuredImage": *[_type==\'product\' && references(^._id)][0]{\n    "url":featuredMedia.asset->url,\n      "blur":featuredMedia.asset->metadata.lqip\n  }\n  }': GET_MENU_CATEGORIESResult
    '*[_type ==\'page\' && status == \'publish\']{\n  "id": _id,\n  "slug": slug.current,\n  title,\n  "link": link.current\n}': GET_COSTUMER_SERVICES_SIDEBAR_MENUResult
    '*[_type ==\'page\' && status == \'publish\' && slug.current in $slug][0]{\n  "id": _id,\n  "slug": slug.current,\n  title,\n  "link": link.current,\n  excerpt,\n  content\n}': GET_COSTUMER_SERVICES_PAGEResult
    '*[_type ==\'post\' && status == \'publish\' && count((categories[]->name)[@ in $type]) > 0][0...12] | order(date desc) {\n    "id": _id,\n  "featuredMedia": {\n    "url": featuredMedia.asset -> url,\n    "blur": featuredMedia.asset -> metadata.lqip\n  },\n  excerpt,\n  author->{\n    name,\n    "avatar": {\n      "url": avatar.asset -> url,\n    "blur": avatar.asset -> metadata.lqip\n    }\n  },\n  "slug": slug.current,\n  categories[]->{\n    name,\n    "id": _id,\n  },\n    title,\n    date\n  }': GET_CARD_BLOG_POSTResult
    '*[_type ==\'post\' && status == \'publish\' && count((tags[]->slug.current)[@ in $slug]) > 0][0...24] | order(date desc) {\n    "id": _id,\n  "featuredMedia": {\n    "url": featuredMedia.asset -> url,\n    "blur": featuredMedia.asset -> metadata.lqip\n  },\n  excerpt,\n  author->{\n    name,\n    "avatar": {\n      "url": avatar.asset -> url,\n    "blur": avatar.asset -> metadata.lqip\n    }\n  },\n  "slug": slug.current,\n  categories[]->{\n    name,\n    "id": _id,\n  },\n    title,\n    date\n  }': GET_CARD_BLOG_POST_BY_TAGSResult
    '*[_type ==\'post\' && status == \'publish\' && count((categories[]->slug.current)[@ in $slug]) > 0][0...24] | order(date desc) {\n    "id": _id,\n  "featuredMedia": {\n    "url": featuredMedia.asset -> url,\n    "blur": featuredMedia.asset -> metadata.lqip\n  },\n  excerpt,\n  author->{\n    name,\n    "avatar": {\n      "url": avatar.asset -> url,\n    "blur": avatar.asset -> metadata.lqip\n    }\n  },\n  "slug": slug.current,\n  categories[]->{\n    name,\n    "id": _id,\n  },\n    title,\n    date\n  }': GET_CARD_BLOG_POST_BY_CATEGORIESResult
    '*[_type ==\'post\' && status == \'publish\' && count((categories[]->name)[@ in $type]) > 0][0...3] | order(date desc) {\n    "id": _id,\n  "featuredMedia": {\n    "url": featuredMedia.asset -> url,\n    "blur": featuredMedia.asset -> metadata.lqip\n  },\n    title,\n    date,\n    "slug": slug.current\n  }': GET_LATEST_BLOG_POSTS_BY_CATEGORIESResult
    '*[_type==\'post\' && status == \'publish\' && slug.current == $slug][0]{\n   "id": _id,\n  "featuredMedia": {\n    "url": featuredMedia.asset -> url,\n    "blur": featuredMedia.asset -> metadata.lqip\n  },\n  excerpt,\n  author->{\n    name,\n    "avatar": {\n      "url": avatar.asset -> url,\n    "blur": avatar.asset -> metadata.lqip\n    }\n  },\n  "slug": slug.current,\n  categories[]->{\n    name,\n    "id": _id,\n    "slug": slug.current,\n    "count": count(*[_type == \'post\' && status == \'publish\' && references(^._id)])\n  },\n    title,\n    date,\n    content,\n    tags[]->{\n    name,\n    "id": _id,\n    "slug": slug.current,\n    "count": count(*[_type == \'post\' && status == \'publish\' && references(^._id)])\n  },\n}': GET_BLOG_ARTICLE_BY_SLUGResult
    '*[_type ==\'post\' && status == \'publish\' && count((categories[]->name)[@ in $type]) > 0 && _id > $lastId][0...12] | order(date desc) {\n    "id": _id,\n  "featuredMedia": {\n    "url": featuredMedia.asset -> url,\n    "blur": featuredMedia.asset -> metadata.lqip\n  },\n  excerpt,\n  author->{\n    name,\n    "avatar": {\n      "url": avatar.asset -> url,\n    "blur": avatar.asset -> metadata.lqip\n    }\n  },\n  "slug": slug.current,\n  categories[]->{\n    name,\n    "id": _id,\n  },\n    title,\n    date\n  }': GET_CARD_BLOG_POST_PAGINATIONResult
    "count(*[_type =='post' && status == 'publish' && count((categories[]->name)[@ in $type]) > 0])": GET_TOTAL_BLOG_POSTResult
    '*[_type==\'brand\']{\n  "id": _id,\n  "slug": link.current,\n  "media": {\n    "url": image.asset->url,\n    "blur": image.asset->metadata.lqip\n  },\n  title\n}': GET_BRANDSResult
    '*[_type==\'product\' && status==\'publish\' && defined(price) && (title match $search || excerpt match $search)]{\n  "id": _id,\n  "featuredMedia": {\n    "url": featuredMedia.asset->url,\n      "blur": featuredMedia.asset->metadata.lqip\n  },\n  title,\n  "slug": slug.current,\n  excerpt,\n  "categories": productCategories[]->{\n    "id": _id,\n    name,\n    "slug": slug.current\n  },\n  content,\n  price,\n  sale,\n  dimensions,\n  "stockQuantity": stock_quantity,\n  options,\n  date,\n  "tags": productTags[]->{\n    "id": _id,\n    name,\n    "slug": slug.current\n  },\n "otherImages": relatedImages[].asset->{\n  "url": url,\n  "blur": metadata.lqip\n}\n}': GET_CARD_STYLE_ONE_PRODUCTS_BY_SEARCHResult
    '*[_type==\'product\' && status==\'publish\' && defined(price) && count((productCategories[]->name)[@ in $type]) > 0]{\n  "id": _id,\n  "featuredMedia": {\n    "url": featuredMedia.asset->url,\n      "blur": featuredMedia.asset->metadata.lqip\n  },\n  title,\n  "slug": slug.current,\n  excerpt,\n  "categories": productCategories[]->{\n    "id": _id,\n    name,\n    "slug": slug.current\n  },\n  content,\n  price,\n  sale,\n  createdAt,\n  dimensions,\n  "stockQuantity": stock_quantity,\n  options,\n  date,\n  "tags": productTags[]->{\n    "id": _id,\n    name,\n    "slug": slug.current\n  },\n "otherImages": relatedImages[].asset->{\n  "url": url,\n  "blur": metadata.lqip\n}\n}': GET_CARD_STYLE_ONE_PRODUCTS_BY_CATEGORYResult
    '*[_type==\'brand\' && link.current == $slug][0]{\n  title, \n  "banner": *[_type ==\'homePage\'][0]{\n      "url": productListBanner.banner.asset->url,\n      "blur": productListBanner.banner.asset->metadata.lqip,\n      "link": productListBanner.link\n  },\n  "products": *[_type==\'product\' && status==\'publish\' && defined(price) && title match ^.title]{\n  "id": _id,\n  "featuredMedia": {\n    "url": featuredMedia.asset->url,\n      "blur": featuredMedia.asset->metadata.lqip\n  },\n  title,\n  "slug": slug.current,\n  excerpt,\n  "categories": productCategories[]->{\n    "id": _id,\n    name,\n    "slug": slug.current\n  },\n  content,\n  price,\n  sale,\n  createdAt,\n  dimensions,\n  "stockQuantity": stock_quantity,\n  options,\n  date,\n  "tags": productTags[]->{\n    "id": _id,\n    name,\n    "slug": slug.current\n  },\n "otherImages": relatedImages[].asset->{\n  "url": url,\n  "blur": metadata.lqip\n}\n}\n  }': GET_BRANDS_AND_PRODUCTSResult
    '*[_type==\'brand\' && link.current == $slug][0] {\n  "products": *[_type==\'product\' && status==\'publish\' && defined(price) && title match ^.title]{\n     "categories": productCategories[]->{\n    "id": _id,\n    name,\n    "slug": slug.current,\n  },\n    price\n  }\n  }': GET_PRODUCTS_AND_BRAND_FOR_FILTERINGResult
    '*[_type==\'productCategory\' && slug.current == $slug][0]{\n  name, \n  description,\n  "banner": *[_type ==\'homePage\'][0]{\n      "url": productListBanner.banner.asset->url,\n      "blur": productListBanner.banner.asset->metadata.lqip,\n      "link": productListBanner.link\n  },\n  "children": *[_type==\'productCategory\' && references(^._id)]\n   {\n    "id": _id,\n    name, \n    link\n   },\n  "products": *[_type==\'product\' && status==\'publish\' && defined(price) && references(^._id)]{\n  "id": _id,\n  "featuredMedia": {\n    "url": featuredMedia.asset->url,\n      "blur": featuredMedia.asset->metadata.lqip\n  },\n  title,\n  "slug": slug.current,\n  excerpt,\n  "categories": productCategories[]->{\n    "id": _id,\n    name,\n    "slug": slug.current\n  },\n  content,\n  price,\n  sale,\n  createdAt,\n  dimensions,\n  "stockQuantity": stock_quantity,\n  options,\n  date,\n  "tags": productTags[]->{\n    "id": _id,\n    name,\n    "slug": slug.current\n  },\n "otherImages": relatedImages[].asset->{\n  "url": url,\n  "blur": metadata.lqip\n}\n}\n  }': GET_CATEGORY_AND_PRODUCTSResult
    '*[_type==\'productCategory\' && slug.current == $slug][0] {\n  "children": *[_type==\'productCategory\' && references(^._id)]\n   {\n      "id": _id,\n    name, \n    "slug": slug.current, \n   },\n  "products": *[_type==\'product\' && status==\'publish\' && defined(price) && references(^._id)]{\n     "categories": productCategories[]->{\n    "id": _id,\n    name,\n    "slug": slug.current,\n  },\n    price\n  }\n  }': GET_PRODUCTS_AND_CATEGORIES_FOR_FILTERINGResult
    '*[_type==\'product\' && status==\'publish\' && defined(price) && slug.current == $slug][0]{\n  "id": _id,\n  "featuredMedia": {\n    "url": featuredMedia.asset->url,\n      "blur": featuredMedia.asset->metadata.lqip\n  },\n  title,\n  "slug": slug.current,\n  excerpt,\n  "categories": productCategories[]->{\n    "id": _id,\n    name,\n    "slug": slug.current\n  },\n  content,\n  price,\n  sale,\n  createdAt,\n  dimensions,\n  "stockQuantity": stock_quantity,\n  options,\n  date,\n  "tags": productTag[]->{\n    "id": _id,\n    name,\n    "slug": slug.current\n  },\n "otherImages": relatedImages[].asset->{\n  "url": url,\n  "blur": metadata.lqip\n},\n"downloads": downloads.asset->{\n    title,\n    url\n  }\n}': GET_WHOLE_PRODUCT_BY_SLUGResult
    '*[_type==\'coupon\' && code == $code][0] {\n   amount,\n    date_expires,\n    discount_type,\n    limit_usage_to_x_items,\n    maximum_amount,\n    minimum_amount,\n    "product_categories": product_categories[]->{\n     "id": _id\n    },\n    "product_ids": product_ids[]->{\n     "id": _id  \n   },\n    usage_limit,\n    usage_count,\n    usage_limit_per_user\n}': GET_COUPONS_FOR_VALIDATIONResult
    '*[_type ==\'costumer\' && _id == $id][0]{\n  "id": _id,\n  "active": isPayingCustomer,\n  userName,\n  lastName,\n  firstName,\n  password,\n    email,\n  "avatar": avatarUrl.asset->{\n    "url": url,\n    "blur": metadata.lqip\n  },\n "billingAddress": billingAddress[0],\n  shippingAddresses\n}': GET_USER_INFOResult
    '*[_type ==\'costumer\' && email == $email][0]{\n  "id": _id,\n   userName,\n  lastName,\n  firstName,\n  password,\n    email,\n   "avatar": avatarUrl.asset->{\n    "url": url,\n  },\n}': GET_USER_FOR_AUTHResult
    '*[_type ==\'order\' && userEmail._ref == $id ]{\n  "id": _id,\n  purchaseDate,\n  currierCode,\n  status,\n  expectedDeliveryDate,\n  paymentMethod,\n  "shippingAddress": shippingAddress[0],\n  totalAmount,\n  products[]{\n      product-> {\n        "id": _id,\n        title,\n        price,\n        "featuredMedia": {\n          "url": featuredMedia.asset->url,\n            "blur": featuredMedia.asset->metadata.lqip\n        },\n        sale\n      },\n      quantity\n    }\n}': GET_ORDERS_BY_USER_IDResult
    "*[_type =='post' && status == 'publish' && count((categories[]->name)[@ in $type]) > 0] | order(date desc) {\n  \"slug\": slug.current\n  }": GET_STATIC_BLOG_OR_NEWS_SLUGResult
    '*[_type ==\'tag\'] | order(date desc) {\n  "slug": slug.current\n  }': GET_STATIC_TAGS_SLUGSResult
    '*[_type ==\'category\'] | order(date desc) {\n  "slug": slug.current\n  }': GET_STATIC_CATEGORIES_SLUGSResult
    "*[_type =='page' && status == 'publish']{\n  \"slug\": slug.current,\n}": GET_STATIC_COSTUMER_SERVICES_PAGES_SUGResult
    "*[_type=='product' && status=='publish' && defined(price)]{\n  \"slug\": slug.current,\n}": GET_STATIC_PRODUCTS_SLUGResult
  }
}
